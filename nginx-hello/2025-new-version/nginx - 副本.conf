# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

# user nginx;
user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # 这里表示 Nginx 会自动加载 /etc/nginx/conf.d/ 目录下的所有配置文件
    include /etc/nginx/conf.d/*.conf;

    client_max_body_size 10m;


    server {
        listen 80;
        server_name test.fx67ll.com;
        # 这里是自动跳转到https地址的方案
        rewrite ^(.*)$ https://$host$1 permanent;
		
        location / {
            # 这里是临时方案，因为这个还是没解决用jenkins.fx67ll.com访问的问题
            proxy_pass http://211.149.128.130:81/;
        }
    }

    server {
        listen 443 ssl;
        server_name test.fx67ll.com;

        ssl_certificate /etc/ssl/fx67ll.com/_.fx67ll.com.crt;
        ssl_certificate_key /etc/ssl/fx67ll.com/_.fx67ll.com.key;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;

        location / {
            # 这里是临时方案，因为这个还是没解决用jenkins.fx67ll.com访问的问题
            proxy_pass http://211.149.128.130:81/;
        }
    }

    server {
        listen 80;
        server_name express.fx67ll.com;
        location / {
            proxy_pass http://211.149.128.130:3000;
        }
    }

    server {
        listen 443 ssl;
        server_name express.fx67ll.com;

        ssl_certificate /etc/ssl/fx67ll.com/_.fx67ll.com.crt;
        ssl_certificate_key /etc/ssl/fx67ll.com/_.fx67ll.com.key;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;

        location / {
            proxy_pass http://211.149.128.130:3000;
        }
    }


    server {
        listen 80;
        server_name netdata.fx67ll.com;
        # 这里是自动跳转到https地址的方案
        rewrite ^(.*)$ https://$host$1 permanent;
		
        location / {
            proxy_pass http://211.149.128.130:19999;
        }
    }

    server {
        listen 443 ssl;
        server_name netdata.fx67ll.com;

        ssl_certificate /etc/ssl/fx67ll.com/_.fx67ll.com.crt;
        ssl_certificate_key /etc/ssl/fx67ll.com/_.fx67ll.com.key;
        ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 10m;

        location / {
            proxy_pass http://211.149.128.130:19999;
        }
    }
}

